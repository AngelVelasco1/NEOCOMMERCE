CREATE TABLE CUSTOMERS(
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    phoneNumber VARCHAR(255) NOT NULL,
    createdAt TIMESTAMP NOT NULL
);
ALTER TABLE
    CUSTOMERS ADD UNIQUE customers_email_unique(email);
ALTER TABLE
    CUSTOMERS ADD UNIQUE customers_phonenumber_unique(phoneNumber);
CREATE TABLE PRODUCTS(
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(255) NOT NULL,
    price FLOAT(53) NOT NULL,
    stock INT NOT NULL,
    weight DECIMAL(8, 2) NOT NULL,
    categoryId BIGINT NOT NULL,
    status BOOLEAN NOT NULL,
    createdAt TIMESTAMP NOT NULL,
    updatedAt TIMESTAMP NOT NULL
);
ALTER TABLE
    PRODUCTS ADD UNIQUE products_name_unique(name);
CREATE TABLE ORDER_ITEMS(
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    unitPrice DECIMAL(8, 2) NOT NULL,
    salePrice DECIMAL(8, 2) NOT NULL,
    quantity INT NOT NULL,
    subTotal DECIMAL(8, 2) NOT NULL,
    productId BIGINT NOT NULL,
    orderId BIGINT NOT NULL
);


CREATE TABLE CATEGORIES(
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);


CREATE TABLE CART (
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    customerId BIGINT NULL, -- NULL si es un usuario an√≥nimo
    sessionToken VARCHAR(255) NULL, -- Para carritos no autenticados
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)



CREATE TABLE CART_ITEMS (
   id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    cartId BIGINT NOT NULL,
    productId BIGINT NOT NULL,
    quantity INT NOT NULL,
    unitPrice DECIMAL(8,2) NOT NULL,
    FOREIGN KEY (cartId) REFERENCES cart(id),
    FOREIGN KEY (productId) REFERENCES products(id)
)



-- 1. Pago confirmado, procesando pedido 2. Pedido despachado 3. Pedido entregado
CREATE TABLE ORDERS(
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    date DATE NOT NULL,
    status ENUM('processing', 'dispatched', 'delivered') NOT NULL,    
    totalPrice DECIMAL(8, 2) NOT NULL,
    customerId BIGINT NOT NULL,
    couponId BIGINT NULL,
    createdAt TIMESTAMP NOT NULL,
    updatedAt TIMESTAMP NOT NULL
);
CREATE TABLE IMAGES(
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    imageURL VARCHAR(255) NOT NULL,
    productId BIGINT NOT NULL
);
CREATE TABLE ORDERS_LOGS(
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    previousStatus ENUM('') NOT NULL,
    newStatus ENUM('') NOT NULL,
    orderId BIGINT NOT NULL,
    changedAt TIMESTAMP NOT NULL
);
CREATE TABLE PAYMENTS(
    id BIGINT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    method ENUM('') NOT NULL,
    status ENUM('Completed', 'Refused') NOT NULL,
    amount DECIMAL(8, 2) NOT NULL,
    paymentDate DATETIME NULL,
    orderId BIGINT NOT NULL,
    customerId BIGINT NOT NULL,
    transactionId BIGINT NOT NULL,
);

CREATE TABLE ADDRESSES(
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    address VARCHAR(255) NOT NULL,
    city VARCHAR(255) NOT NULL,
    deparment VARCHAR(255) NOT NULL,
    customerId INT NOT NULL,
    countryId INT NOT NULL,
    createdAt TIMESTAMP NOT NULL
);
CREATE TABLE COUNTRIES(
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);
CREATE TABLE COUPONS(
    id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    code VARCHAR(255) NOT NULL,
    discount DECIMAL(8, 2) NOT NULL,
    expDate DATETIME NOT NULL
);
ALTER TABLE
    ADDRESSES ADD CONSTRAINT addresses_countryid_foreign FOREIGN KEY(countryId) REFERENCES COUNTRIES(id);
ALTER TABLE
    PAYMENTS ADD CONSTRAINT payments_customerid_foreign FOREIGN KEY(customerId) REFERENCES CUSTOMERS(id);
ALTER TABLE
    IMAGES ADD CONSTRAINT images_productid_foreign FOREIGN KEY(productId) REFERENCES PRODUCTS(id);
ALTER TABLE
    ORDERS ADD CONSTRAINT orders_customerid_foreign FOREIGN KEY(customerId) REFERENCES CUSTOMERS(id);
ALTER TABLE
    ORDER_ITEMS ADD CONSTRAINT order_items_productid_foreign FOREIGN KEY(productId) REFERENCES PRODUCTS(id);
ALTER TABLE
    ORDER_ITEMS ADD CONSTRAINT order_items_orderid_foreign FOREIGN KEY(orderId) REFERENCES ORDERS(id);
ALTER TABLE
    PAYMENTS ADD CONSTRAINT payments_orderid_foreign FOREIGN KEY(orderId) REFERENCES ORDERS(id);
ALTER TABLE
    ORDERS ADD CONSTRAINT orders_couponid_foreign FOREIGN KEY(couponId) REFERENCES COUPONS(id);
ALTER TABLE
    PRODUCTS ADD CONSTRAINT products_categoryid_foreign FOREIGN KEY(categoryId) REFERENCES CATEGORIES(id);
ALTER TABLE
    ORDERS_LOGS ADD CONSTRAINT orders_logs_orderid_foreign FOREIGN KEY(orderId) REFERENCES ORDERS(id);
ALTER TABLE
    ADDRESSES ADD CONSTRAINT addresses_customerid_foreign FOREIGN KEY(customerId) REFERENCES CUSTOMERS(id);