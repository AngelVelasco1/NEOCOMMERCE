CREATE DATABASE IF NOT EXISTS neocommerce;
USE neocommerce;

DO $$ BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'orders_paymentmethod_enum') THEN
        CREATE TYPE orders_paymentmethod_enum AS ENUM ('paypal', 'nequi', 'efecty');
    END IF;

    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'orders_status_enum') THEN
        CREATE TYPE orders_status_enum AS ENUM ('Pending', 'Paid', 'Processing', 'Shipped', 'Delivered');
    END IF;
END $$;

CREATE TABLE IF NOT EXISTS USERS (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(255) UNIQUE NOT NULL,
  emailVerified BOOLEAN,
  password VARCHAR(255) NOT NULL,
  phoneNumber VARCHAR(255) UNIQUE NOT NULL,
  roleId INT NOT NULL,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  FOREIGN KEY (roleId) REFERENCES ROLES(id)
);

CREATE TABLE IF NOT EXISTS ROLES (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS PERMISSIONS (
  id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
  name VARCHAR(255) UNIQUE NOT NULL,
  description VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS ROLE_PERMISSIONS (
  roleId INT NOT NULL,
  permissionId INT NOT NULL,
  FOREIGN KEY (roleId) REFERENCES ROLES(id),
  FOREIGN KEY (permissionId) REFERENCES PERMISSIONS(id),
  PRIMARY KEY (roleId, permissionId)
);

CREATE TABLE IF NOT EXISTS PRODUCTS (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  description TEXT NOT NULL,
  price INT NOT NULL,
  stock INT NOT NULL,
  weight DECIMAL(8,2) NOT NULL,
  sizes VARCHAR(255) NOT NULL,
  categoryId INT NOT NULL,
  brandId INT NOT NULL,
  isActive BOOLEAN NOT NULL,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
  FOREIGN KEY (categoryId) REFERENCES CATEGORIES(id),
  FOREIGN KEY (brandId) REFERENCES BRANDS(id)
);

CREATE TABLE IF NOT EXISTS ORDER_ITEMS (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
  price INT NOT NULL,
  quantity INT NOT NULL,
  subTotal DECIMAL(8,2) GENERATED ALWAYS AS (price * quantity) STORED,
  productId BIGINT NOT NULL,
  orderId BIGINT NOT NULL,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
  FOREIGN KEY (productId) REFERENCES PRODUCTS(id),
  FOREIGN KEY (orderId) REFERENCES ORDERS(id)
);

CREATE TABLE IF NOT EXISTS ORDERS (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  status orders_status_enum NOT NULL,
  total INT NOT NULL,
  paymentMethod orders_paymentmethod_enum NOT NULL,
  paymentStatus BOOLEAN NOT NULL,
  transactionId VARCHAR(255) NOT NULL,
  userId BIGINT NOT NULL,
  couponId BIGINT,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
  updatedBy INT NOT NULL,
  FOREIGN KEY (userId) REFERENCES USERS(id),
  FOREIGN KEY (couponId) REFERENCES COUPONS(id)
);

CREATE TABLE IF NOT EXISTS ORDER_LOGS (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  previousStatus orders_status_enum NOT NULL,
  newStatus orders_status_enum NOT NULL,
  note VARCHAR(255),
  ipAddress VARCHAR(45) NOT NULL,
  orderId BIGINT NOT NULL,
  updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
  updatedBy INT NOT NULL,
  FOREIGN KEY (orderId) REFERENCES ORDERS(id)
);

CREATE TABLE IF NOT EXISTS IMAGES (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  imageURL VARCHAR(255) NOT NULL,
  colorCode VARCHAR(7) NOT NULL,
  color VARCHAR(255) NOT NULL,
  productId BIGINT NOT NULL,
  FOREIGN KEY (productId) REFERENCES PRODUCTS(id)
);

CREATE TABLE IF NOT EXISTS ADDRESSES (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  address VARCHAR(255) NOT NULL,
  city VARCHAR(255) NOT NULL,
  department VARCHAR(255) NOT NULL,
  userId BIGINT NOT NULL,
  countryId INT NOT NULL,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  FOREIGN KEY (countryId) REFERENCES COUNTRIES(id),
  FOREIGN KEY (userId) REFERENCES USERS(id)
);

CREATE TABLE IF NOT EXISTS COUNTRIES (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS COUPONS (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  code VARCHAR(255) NOT NULL,
  discount DECIMAL(8,2) NOT NULL,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  expiresAt TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS CART (
  id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  userId BIGINT,
  sessionToken UUID,
  totalPrice DECIMAL(8,2) NOT NULL,
  createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  expiresAt TIMESTAMP DEFAULT NULL,
  FOREIGN KEY (userId) REFERENCES USERS(id)
);

CREATE TABLE IF NOT EXISTS CART_ITEMS (
  id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY NOT NULL,
  cartId INT NOT NULL,
  productId INT NOT NULL,
  quantity INT NOT NULL,
  unitPrice DECIMAL(8,2) NOT NULL,
  expiresAt TIMESTAMP NOT NULL,
  FOREIGN KEY (cartId) REFERENCES CART(id),
  FOREIGN KEY (productId) REFERENCES PRODUCTS(id)
);

CREATE TABLE IF NOT EXISTS CATEGORIES (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  idSubcategory BIGINT NOT NULL,
  FOREIGN KEY (idSubcategory) REFERENCES SUBCATEGORY(id)
);

CREATE TABLE IF NOT EXISTS SUBCATEGORY (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS BRANDS (
  id INT PRIMARY KEY NOT NULL,
  name VARCHAR(255) NOT NULL,
  imageUrl VARCHAR(255)
);
